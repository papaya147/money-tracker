{
    "swagger": "2.0",
    "info": {
        "description": "The comprehensive list of all Money Tracker APIs",
        "title": "Money Tracker APIs",
        "contact": {},
        "version": "1.0"
    },
    "host": "localhost:4000",
    "basePath": "/api/v1",
    "paths": {
        "/expenditure": {
            "get": {
                "description": "Get all expenditures, this API will return an error if the offset is empty.",
                "tags": [
                    "expenditure"
                ],
                "summary": "Get all expenditures, 20 at a time",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "page",
                        "name": "page",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/expenditure.expenditureOutput"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/util.ErrorModel"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/util.ErrorModel"
                        }
                    }
                }
            },
            "post": {
                "description": "Create a new expenditure, this API will return an error if the category is not found.",
                "tags": [
                    "expenditure"
                ],
                "summary": "Create a new expenditure",
                "parameters": [
                    {
                        "description": "json",
                        "name": "request-body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/expenditure.createExpenditureInput"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/expenditure.expenditureOutput"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/util.ErrorModel"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/util.ErrorModel"
                        }
                    }
                }
            }
        },
        "/expenditure/category": {
            "get": {
                "description": "Get all expenditure categories, this API will return an error if none have been created.",
                "tags": [
                    "expenditure category"
                ],
                "summary": "Get all expenditure categories",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/util.ErrorModel"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/util.ErrorModel"
                        }
                    }
                }
            },
            "post": {
                "description": "Create a new expenditure category, this API will return an error if the category has already been created.",
                "tags": [
                    "expenditure category"
                ],
                "summary": "Create a new expenditure category",
                "parameters": [
                    {
                        "description": "json",
                        "name": "request-body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/category.createCategoryInput"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/category.categoryOutput"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/util.ErrorModel"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/util.ErrorModel"
                        }
                    }
                }
            }
        },
        "/expenditure/category/bulk": {
            "post": {
                "description": "Create a bulk of new expenditure categories, this API will return an error if any category already exists.",
                "tags": [
                    "expenditure category"
                ],
                "summary": "Create a bulk of new expenditure categories",
                "parameters": [
                    {
                        "description": "json",
                        "name": "request-body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/category.createBulkCategoryInput"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/category.categoryOutput"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/util.ErrorModel"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/util.ErrorModel"
                        }
                    }
                }
            }
        },
        "/expenditure/category/{category-name}": {
            "put": {
                "description": "Update an expenditure category's name, this API will return an error if the category does not exist.",
                "tags": [
                    "expenditure category"
                ],
                "summary": "Update an expenditure category's name",
                "parameters": [
                    {
                        "maxLength": 32,
                        "type": "string",
                        "description": "Category Name",
                        "name": "category-name",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "json",
                        "name": "request-body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/category.updateCategoryInput"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/category.categoryOutput"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/util.ErrorModel"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/util.ErrorModel"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete an expenditure category's, this API will return an error if the category does not exist.",
                "tags": [
                    "expenditure category"
                ],
                "summary": "Delete an expenditure category's",
                "parameters": [
                    {
                        "maxLength": 32,
                        "type": "string",
                        "description": "Category Name",
                        "name": "category-name",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/category.categoryOutput"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/util.ErrorModel"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/util.ErrorModel"
                        }
                    }
                }
            }
        },
        "/expenditure/{expenditure-id}": {
            "put": {
                "description": "Update an expenditure, this API will return an error if the category is not found.",
                "tags": [
                    "expenditure"
                ],
                "summary": "Update an expenditure",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Expenditure Id",
                        "name": "expenditure-id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "json",
                        "name": "request-body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/expenditure.updateExpenditureInput"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/expenditure.expenditureOutput"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/util.ErrorModel"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/util.ErrorModel"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete an expenditure, this API will return an error if the expenditure is not found.",
                "tags": [
                    "expenditure"
                ],
                "summary": "Delete an expenditure",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Expenditure Id",
                        "name": "expenditure-id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/expenditure.expenditureOutput"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/util.ErrorModel"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/util.ErrorModel"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "category.categoryOutput": {
            "type": "object",
            "properties": {
                "category": {
                    "type": "string",
                    "example": "electronics"
                },
                "created_at": {
                    "type": "integer",
                    "example": 1709885754000
                },
                "updated_at": {
                    "type": "integer",
                    "example": 1709885754000
                }
            }
        },
        "category.createBulkCategoryInput": {
            "type": "object",
            "required": [
                "categories"
            ],
            "properties": {
                "categories": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "example": [
                        "electronics",
                        "furniture",
                        "school"
                    ]
                }
            }
        },
        "category.createCategoryInput": {
            "type": "object",
            "required": [
                "name"
            ],
            "properties": {
                "name": {
                    "type": "string",
                    "maxLength": 32,
                    "example": "electronics"
                }
            }
        },
        "category.updateCategoryInput": {
            "type": "object",
            "required": [
                "new_name"
            ],
            "properties": {
                "new_name": {
                    "type": "string",
                    "maxLength": 32,
                    "example": "electronics"
                }
            }
        },
        "expenditure.createExpenditureInput": {
            "type": "object",
            "required": [
                "category",
                "paisa"
            ],
            "properties": {
                "category": {
                    "type": "string",
                    "maxLength": 32,
                    "example": "electronics"
                },
                "paisa": {
                    "type": "integer",
                    "example": 561000
                }
            }
        },
        "expenditure.expenditureOutput": {
            "type": "object",
            "properties": {
                "category": {
                    "type": "string",
                    "example": "electronics"
                },
                "created_at": {
                    "type": "integer",
                    "example": 1709885754000
                },
                "id": {
                    "type": "string",
                    "example": "6ba7b814-9dad-11d1-80b4-00c04fd430c8"
                },
                "paisa": {
                    "type": "integer",
                    "example": 123400
                },
                "updated_at": {
                    "type": "integer",
                    "example": 1709885754000
                }
            }
        },
        "expenditure.updateExpenditureInput": {
            "type": "object",
            "properties": {
                "category": {
                    "type": "string",
                    "example": "electronics"
                },
                "paisa": {
                    "type": "integer",
                    "example": 561000
                }
            }
        },
        "util.ErrorModel": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string",
                    "example": "something went wrong"
                },
                "status": {
                    "type": "integer",
                    "example": 400
                }
            }
        }
    }
}