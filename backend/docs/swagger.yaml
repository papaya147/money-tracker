basePath: /api/v1
definitions:
  category.categoryOutput:
    properties:
      category:
        example: electronics
        type: string
      created_at:
        example: 1709885754000
        type: integer
      updated_at:
        example: 1709885754000
        type: integer
    type: object
  category.createBulkCategoryInput:
    properties:
      categories:
        example:
        - electronics
        - furniture
        - school
        items:
          type: string
        type: array
    required:
    - categories
    type: object
  category.createCategoryInput:
    properties:
      name:
        example: electronics
        maxLength: 32
        type: string
    required:
    - name
    type: object
  category.updateCategoryInput:
    properties:
      new_name:
        example: electronics
        maxLength: 32
        type: string
    required:
    - new_name
    type: object
  expenditure.createExpenditureInput:
    properties:
      category:
        example: electronics
        maxLength: 32
        type: string
      paisa:
        example: 561000
        type: integer
    required:
    - category
    - paisa
    type: object
  expenditure.expenditureOutput:
    properties:
      category:
        example: electronics
        type: string
      created_at:
        example: 1709885754000
        type: integer
      id:
        example: 6ba7b814-9dad-11d1-80b4-00c04fd430c8
        type: string
      paisa:
        example: 123400
        type: integer
      updated_at:
        example: 1709885754000
        type: integer
    type: object
  expenditure.updateExpenditureInput:
    properties:
      category:
        example: electronics
        type: string
      paisa:
        example: 561000
        type: integer
    type: object
  util.ErrorModel:
    properties:
      message:
        example: something went wrong
        type: string
      status:
        example: 400
        type: integer
    type: object
host: localhost:4000
info:
  contact: {}
  description: The comprehensive list of all Money Tracker APIs
  title: Money Tracker APIs
  version: "1.0"
paths:
  /expenditure:
    get:
      description: Get all expenditures, this API will return an error if the offset
        is empty.
      parameters:
      - description: Page
        in: query
        name: page
        required: true
        type: integer
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/expenditure.expenditureOutput'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/util.ErrorModel'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/util.ErrorModel'
      summary: Get all expenditures, 20 at a time
      tags:
      - expenditure
    post:
      description: Create a new expenditure, this API will return an error if the
        category is not found.
      parameters:
      - description: json
        in: body
        name: request-body
        required: true
        schema:
          $ref: '#/definitions/expenditure.createExpenditureInput'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/expenditure.expenditureOutput'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/util.ErrorModel'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/util.ErrorModel'
      summary: Create a new expenditure
      tags:
      - expenditure
  /expenditure/{expenditure-id}:
    delete:
      description: Delete an expenditure, this API will return an error if the expenditure
        is not found.
      parameters:
      - description: Expenditure Id
        in: path
        name: expenditure-id
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/expenditure.expenditureOutput'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/util.ErrorModel'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/util.ErrorModel'
      summary: Delete an expenditure
      tags:
      - expenditure
    put:
      description: Update an expenditure, this API will return an error if the category
        is not found.
      parameters:
      - description: Expenditure Id
        in: path
        name: expenditure-id
        required: true
        type: string
      - description: json
        in: body
        name: request-body
        required: true
        schema:
          $ref: '#/definitions/expenditure.updateExpenditureInput'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/expenditure.expenditureOutput'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/util.ErrorModel'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/util.ErrorModel'
      summary: Update an expenditure
      tags:
      - expenditure
  /expenditure/category:
    get:
      description: Get all expenditure categories, this API will return an error if
        none have been created.
      responses:
        "200":
          description: OK
          schema:
            items:
              type: string
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/util.ErrorModel'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/util.ErrorModel'
      summary: Get all expenditure categories
      tags:
      - expenditure category
    post:
      description: Create a new expenditure category, this API will return an error
        if the category has already been created.
      parameters:
      - description: json
        in: body
        name: request-body
        required: true
        schema:
          $ref: '#/definitions/category.createCategoryInput'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/category.categoryOutput'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/util.ErrorModel'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/util.ErrorModel'
      summary: Create a new expenditure category
      tags:
      - expenditure category
  /expenditure/category/{category-name}:
    delete:
      description: Delete an expenditure category's, this API will return an error
        if the category does not exist.
      parameters:
      - description: Category Name
        in: path
        maxLength: 32
        name: category-name
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/category.categoryOutput'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/util.ErrorModel'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/util.ErrorModel'
      summary: Delete an expenditure category's
      tags:
      - expenditure category
    put:
      description: Update an expenditure category's name, this API will return an
        error if the category does not exist.
      parameters:
      - description: Category Name
        in: path
        maxLength: 32
        name: category-name
        required: true
        type: string
      - description: json
        in: body
        name: request-body
        required: true
        schema:
          $ref: '#/definitions/category.updateCategoryInput'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/category.categoryOutput'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/util.ErrorModel'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/util.ErrorModel'
      summary: Update an expenditure category's name
      tags:
      - expenditure category
  /expenditure/category/bulk:
    post:
      description: Create a bulk of new expenditure categories, this API will return
        an error if any category already exists.
      parameters:
      - description: json
        in: body
        name: request-body
        required: true
        schema:
          $ref: '#/definitions/category.createBulkCategoryInput'
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/category.categoryOutput'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/util.ErrorModel'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/util.ErrorModel'
      summary: Create a bulk of new expenditure categories
      tags:
      - expenditure category
swagger: "2.0"
